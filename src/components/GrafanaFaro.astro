---
import {name} from '/package.json';
import config from '@/site.config';

if (!config.faro) {
  // No Faro configured
  return null;
}

const {url} = config.faro;
const {build, environment} = config;
---

<script is:inline define:vars={{url, name, build, environment}}>
  (function () {
    var webSdkScript = document.createElement('script');

    // fetch the latest 1.x.x version of the Web-SDK from the CDN
    webSdkScript.src = 'https://unpkg.com/@grafana/faro-web-sdk@1/dist/bundle/faro-web-sdk.iife.js';

    webSdkScript.onload = () => {
      window.GrafanaFaroWebSdk.initializeFaro({
        url,
        app: {
          name,
          version: build,
          environment,
        },
        sessionTracking: {
          samplingRate: 1,
          persistent: true,
        },
      });

      // Load instrumentations at the onLoad event of the web-SDK and after the above configuration.
      // This is important because we need to ensure that the Web-SDK has been loaded and initialized before we add further instruments!
      var webTracingScript = document.createElement('script');

      // fetch the latest 1.x.x version of the Web Tracing package from the CDN
      webTracingScript.src = 'https://unpkg.com/@grafana/faro-web-tracing@1/dist/bundle/faro-web-tracing.iife.js';

      // Initialize, configure (if necessary) and add the the new instrumentation to the already loaded and configured Web-SDK.
      webTracingScript.onload = () => {
        window.GrafanaFaroWebSdk.faro.instrumentations.add(new window.GrafanaFaroWebTracing.TracingInstrumentation());
      };

      // Append the Web Tracing script script tag to the HTML page
      document.head.appendChild(webTracingScript);
    };

    // Append the Web-SDK script script tag to the HTML page
    document.head.appendChild(webSdkScript);
  })();
</script>
